Reach Morra assignment for Faculty of Organizational Sciences

index.mjs:

import { loadStdlib } from '@reach-sh/stdlib';
import * as backend from './build/index.main.mjs';
const stdlib = loadStdlib(process.env);

const startingBalance = stdlib.parseCurrency(100);
const accAlice = await stdlib.newTestAccount(startingBalance);
const accBob = await stdlib.newTestAccount(startingBalance);

const fmt = (x) => stdlib.formatCurrency(x, 4);
const getBalance = async (who) => fmt(await stdlib.balanceOf(who));
const beforeAlice = await getBalance(accAlice);
const beforeBob = await getBalance(accBob);

const ctcAlice = accAlice.contract(backend);
const ctcBob = accBob.contract(backend, ctcAlice.getInfo());

This part of code initializes Reach stdlib and declares our players blockchain accounts. It declares starting balance of accounts as well as Alice deploying the contract.
"parseCurrency" function is used to convert the crypto amount to micro algos.


const HAND = [0, 1, 2, 3, 4, 5];
const VOCAL = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
const OUTCOME = ['Bob wins', 'Draw', 'Alice wins'];


Values which represent number of raised fingers(const HAND), players guess of number of raised fingers(const VOCAL), and possible outcomes are declared.
